[{"path":"/articles/quickStart.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Quick start guide","text":"Liehrmann, . Rigaill, G. Ms.Fpop: Exact Fast Segmentation Algorithm Multiscale Penalty (2023) doi:10.48550/arXiv.2303.08723.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arnaud Liehrmann. Author, maintainer. Guillem Rigaill. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liehrmann , Rigaill G (2023). MsFPOP: Ms.Fpop: Exact Fast Segmentation Algorithm Multiscale Penalty. R package version 1.0, https://github.com/aLiehrmann/MsFPOP.","code":"@Manual{,   title = {MsFPOP: Ms.Fpop: An Exact and Fast Segmentation Algorithm With a Multiscale Penalty},   author = {Arnaud Liehrmann and Guillem Rigaill},   year = {2023},   note = {R package version 1.0},   url = {https://github.com/aLiehrmann/MsFPOP}, }"},{"path":[]},{"path":"/index.html","id":"what-is-msfpop-","dir":"","previous_headings":"","what":"What is Ms.Fpop ?","title":"Ms.Fpop: An Exact and Fast Segmentation Algorithm With a Multiscale Penalty","text":"MsFPOP R package implements exact segmentation algorithm extends functionnal pruning ideas Rigaill (2015) Maidstone et al. (2017) least squares criterion multiscale penalty described (Verzelen et al. 2020). motivation method well technical details simulations described Liehrmann Rigaill (2023). Briefly, penalty promotes well spread changepoints. propose efficient C++ implementation interfaced R Ms.Fpop allowing segment profile 106 datapoints matter seconds.","code":""},{"path":"/index.html","id":"how-can-i-get-msfpop-","dir":"","previous_headings":"","what":"How can I get Ms.FPOP ?","title":"Ms.Fpop: An Exact and Fast Segmentation Algorithm With a Multiscale Penalty","text":"Make sure remotes installed running install.packages(\"remotes\"), type","code":"remotes::install_github(\"aLiehrmann/MsFPOP\")"},{"path":"/index.html","id":"where-can-i-learn-more","dir":"","previous_headings":"","what":"Where can I learn more?","title":"Ms.Fpop: An Exact and Fast Segmentation Algorithm With a Multiscale Penalty","text":"See multiscale penalty section gentle introduction multiscale penalty. See calibration tutorial details calibrate multiscale penalty. Details regarding multiscale penalty can found Verzelen et al. (2020). Details regarding functional pruning ideas can found Rigaill (2015) Maidstone et al. (2017).","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Ms.Fpop: An Exact and Fast Segmentation Algorithm With a Multiscale Penalty","text":"Verzelen, N., Fromont, M., Lerasle, M., Reynaud-Bouret, P. Optimal Change-Point Detection Localization (2020). https://arxiv.org/abs/2010.11470. Maidstone R, Hocking T, Rigaill G, Fearnhead P. optimal multiple changepoint algorithms large data. Stat Comput 27(2), 519-533 (2017). doi:10.1007/s11222-016-9636-3. Rigaill G. pruned dynamic programming algorithm recover best segmentations 1 Kmax change-points. Journal de la Société Française de Statistique 156(4), (2015). http://www.numdam.org/item/JSFS_2015__156_4_180_0/ Liehrmann, . Rigaill, G. Ms.Fpop: Exact Fast Segmentation Algorithm Multiscale Penalty (2023). add link preprint.","code":""},{"path":"/reference/FpopPSD-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Pruning Optimal Partitioning with Penalty Segment Dependent — FpopPSD-package","title":"Functional Pruning Optimal Partitioning with Penalty Segment Dependent — FpopPSD-package","text":"FpopPSD extension FPOP, exact data segmentation algorithm based functional pruning. extension implements penalty depends size segments.","code":""},{"path":"/reference/FpopPSD-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functional Pruning Optimal Partitioning with Penalty Segment Dependent — FpopPSD-package","text":"fpopPSD,    opPSD","code":""},{"path":"/reference/FpopPSD-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional Pruning Optimal Partitioning with Penalty Segment Dependent — FpopPSD-package","text":"Arnaud Liehrmann <arnaud.lieh@gmail.com>","code":""},{"path":"/reference/MsFPOP.html","id":null,"dir":"Reference","previous_headings":"","what":"MsFPOP — MsFPOP","title":"MsFPOP — MsFPOP","text":"MsFPOP exact segmentation algorithm extends  functionnal pruning ideas Rigaill 2015 Maidstone et al. 2017  least squares criterion multiscale penalty promoting well-spread changepoints. penalty proposed Verzelen et al. (2020),  achieves optimal rates changepoint detection changepoint localization (arXiv:2010.11470).","code":""},{"path":"/reference/MsFPOP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MsFPOP — MsFPOP","text":"","code":"MsFPOP(   y,   beta,   alpha,   sampling_method = \"rand\",   sampling_method_parameter = 1,   wt )"},{"path":"/reference/MsFPOP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MsFPOP — MsFPOP","text":"y vector observations. beta constant used penalty. alpha constant used penalty. (recommended: gamma+beta*log(length(y))) sampling_method sampling method changepoint candidates (\"rand, \"\"). sampling_method_parameter parameter used sampling method. wt vector weights associated observations.","code":""},{"path":"/reference/MsFPOP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MsFPOP — MsFPOP","text":"list includes estimated position changepoints.","code":""},{"path":"/reference/MsPELT.html","id":null,"dir":"Reference","previous_headings":"","what":"MsPELT — MsPELT","title":"MsPELT — MsPELT","text":"MsPELT exact segmentation algorithm extends inequality pruning idea PELT least squares criterion multiscale penalty promoting well-spread changepoints. penalty  proposed Verzelen et al. (2020), achieves optimal rates changepoint detection changepoint localization (arXiv:2010.11470).","code":""},{"path":"/reference/MsPELT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MsPELT — MsPELT","text":"","code":"MsPELT(y, beta, alpha, wt)"},{"path":"/reference/MsPELT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MsPELT — MsPELT","text":"y vector observations. beta constant used penalty. alpha constant used penalty. (recommended: gamma+beta*log(length(y))). wt vector weights associated observations.","code":""},{"path":"/reference/MsPELT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MsPELT — MsPELT","text":"list includes estimated position changepoints.","code":""},{"path":"/news/index.html","id":"msfpop-10","dir":"Changelog","previous_headings":"","what":"MsFPOP 1.0","title":"MsFPOP 1.0","text":"Fresh start","code":""}]
